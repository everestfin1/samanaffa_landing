
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  phone: 'phone',
  passwordHash: 'passwordHash',
  firstName: 'firstName',
  lastName: 'lastName',
  dateOfBirth: 'dateOfBirth',
  nationality: 'nationality',
  address: 'address',
  city: 'city',
  preferredLanguage: 'preferredLanguage',
  emailVerified: 'emailVerified',
  phoneVerified: 'phoneVerified',
  otpVerifiedAt: 'otpVerifiedAt',
  kycStatus: 'kycStatus',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  civilite: 'civilite',
  country: 'country',
  region: 'region',
  department: 'department',
  arrondissement: 'arrondissement',
  district: 'district',
  domaineActivite: 'domaineActivite',
  idExpiryDate: 'idExpiryDate',
  idIssueDate: 'idIssueDate',
  idNumber: 'idNumber',
  idType: 'idType',
  marketingAccepted: 'marketingAccepted',
  metiers: 'metiers',
  placeOfBirth: 'placeOfBirth',
  privacyAccepted: 'privacyAccepted',
  signature: 'signature',
  statutEmploi: 'statutEmploi',
  termsAccepted: 'termsAccepted'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  sessionToken: 'sessionToken',
  userId: 'userId',
  expires: 'expires',
  createdAt: 'createdAt'
};

exports.Prisma.OtpCodeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  registrationSessionId: 'registrationSessionId',
  code: 'code',
  type: 'type',
  expiresAt: 'expiresAt',
  used: 'used',
  createdAt: 'createdAt'
};

exports.Prisma.UserAccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  accountType: 'accountType',
  accountNumber: 'accountNumber',
  productCode: 'productCode',
  productName: 'productName',
  interestRate: 'interestRate',
  lockPeriodMonths: 'lockPeriodMonths',
  lockedUntil: 'lockedUntil',
  allowAdditionalDeposits: 'allowAdditionalDeposits',
  metadata: 'metadata',
  balance: 'balance',
  status: 'status',
  createdAt: 'createdAt'
};

exports.Prisma.TransactionIntentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  accountId: 'accountId',
  accountType: 'accountType',
  intentType: 'intentType',
  amount: 'amount',
  paymentMethod: 'paymentMethod',
  investmentTranche: 'investmentTranche',
  investmentTerm: 'investmentTerm',
  userNotes: 'userNotes',
  adminNotes: 'adminNotes',
  status: 'status',
  referenceNumber: 'referenceNumber',
  providerTransactionId: 'providerTransactionId',
  providerStatus: 'providerStatus',
  lastCallbackAt: 'lastCallbackAt',
  lastCallbackPayload: 'lastCallbackPayload',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PaymentCallbackLogScalarFieldEnum = {
  id: 'id',
  transactionIntentId: 'transactionIntentId',
  status: 'status',
  payload: 'payload',
  createdAt: 'createdAt'
};

exports.Prisma.KycDocumentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  documentType: 'documentType',
  fileUrl: 'fileUrl',
  fileName: 'fileName',
  uploadDate: 'uploadDate',
  verificationStatus: 'verificationStatus',
  adminNotes: 'adminNotes'
};

exports.Prisma.AdminUserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  passwordHash: 'passwordHash',
  name: 'name',
  role: 'role',
  lastLogin: 'lastLogin',
  createdAt: 'createdAt',
  failedAttempts: 'failedAttempts',
  isActive: 'isActive',
  lockedUntil: 'lockedUntil',
  updatedAt: 'updatedAt'
};

exports.Prisma.RegistrationSessionScalarFieldEnum = {
  id: 'id',
  email: 'email',
  phone: 'phone',
  data: 'data',
  type: 'type',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  title: 'title',
  message: 'message',
  type: 'type',
  priority: 'priority',
  isRead: 'isRead',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.KycStatus = exports.$Enums.KycStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  UNDER_REVIEW: 'UNDER_REVIEW'
};

exports.OtpType = exports.$Enums.OtpType = {
  EMAIL: 'EMAIL',
  SMS: 'SMS'
};

exports.AccountType = exports.$Enums.AccountType = {
  SAMA_NAFFA: 'SAMA_NAFFA',
  APE_INVESTMENT: 'APE_INVESTMENT'
};

exports.AccountStatus = exports.$Enums.AccountStatus = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  SUSPENDED: 'SUSPENDED'
};

exports.IntentType = exports.$Enums.IntentType = {
  DEPOSIT: 'DEPOSIT',
  INVESTMENT: 'INVESTMENT',
  WITHDRAWAL: 'WITHDRAWAL'
};

exports.TransactionStatus = exports.$Enums.TransactionStatus = {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED',
  FAILED: 'FAILED'
};

exports.VerificationStatus = exports.$Enums.VerificationStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  UNDER_REVIEW: 'UNDER_REVIEW'
};

exports.AdminRole = exports.$Enums.AdminRole = {
  ADMIN: 'ADMIN',
  MANAGER: 'MANAGER',
  SUPPORT: 'SUPPORT'
};

exports.SessionType = exports.$Enums.SessionType = {
  REGISTRATION: 'REGISTRATION',
  LOGIN: 'LOGIN'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  KYC_STATUS: 'KYC_STATUS',
  SUCCESS: 'SUCCESS',
  ERROR: 'ERROR',
  WARNING: 'WARNING',
  TRANSACTION: 'TRANSACTION',
  SECURITY: 'SECURITY'
};

exports.NotificationPriority = exports.$Enums.NotificationPriority = {
  LOW: 'LOW',
  NORMAL: 'NORMAL',
  HIGH: 'HIGH',
  URGENT: 'URGENT'
};

exports.Prisma.ModelName = {
  User: 'User',
  Session: 'Session',
  OtpCode: 'OtpCode',
  UserAccount: 'UserAccount',
  TransactionIntent: 'TransactionIntent',
  PaymentCallbackLog: 'PaymentCallbackLog',
  KycDocument: 'KycDocument',
  AdminUser: 'AdminUser',
  RegistrationSession: 'RegistrationSession',
  Notification: 'Notification'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/aliouwade/Documents/everest_finance/sn_ape_clean/prisma/generated/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/aliouwade/Documents/everest_finance/sn_ape_clean/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../..",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"./generated/client\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id                 String              @id @default(cuid())\n  email              String              @unique\n  phone              String              @unique\n  passwordHash       String?\n  firstName          String\n  lastName           String\n  dateOfBirth        DateTime?\n  nationality        String?\n  address            String?\n  city               String?\n  preferredLanguage  String              @default(\"fr\")\n  emailVerified      Boolean             @default(false)\n  phoneVerified      Boolean             @default(false)\n  otpVerifiedAt      DateTime?\n  kycStatus          KycStatus           @default(PENDING)\n  createdAt          DateTime            @default(now())\n  updatedAt          DateTime            @updatedAt\n  civilite           String?\n  country            String?\n  region             String?\n  department         String?\n  arrondissement     String?\n  district           String?\n  domaineActivite    String?\n  idExpiryDate       DateTime?\n  idIssueDate        DateTime?\n  idNumber           String?\n  idType             String?\n  marketingAccepted  Boolean             @default(false)\n  metiers            String?\n  placeOfBirth       String?\n  privacyAccepted    Boolean             @default(false)\n  signature          String?\n  statutEmploi       String?\n  termsAccepted      Boolean             @default(false)\n  kycDocuments       KycDocument[]\n  otpCodes           OtpCode[]\n  sessions           Session[]\n  transactionIntents TransactionIntent[]\n  accounts           UserAccount[]\n  notifications      Notification[]\n\n  @@map(\"users\")\n}\n\nmodel Session {\n  id           String   @id @default(cuid())\n  sessionToken String   @unique\n  userId       String\n  expires      DateTime\n  createdAt    DateTime @default(now())\n  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"sessions\")\n}\n\nmodel OtpCode {\n  id                    String               @id @default(cuid())\n  userId                String?\n  registrationSessionId String?\n  code                  String\n  type                  OtpType\n  expiresAt             DateTime\n  used                  Boolean              @default(false)\n  createdAt             DateTime             @default(now())\n  user                  User?                @relation(fields: [userId], references: [id], onDelete: Cascade)\n  registrationSession   RegistrationSession? @relation(fields: [registrationSessionId], references: [id], onDelete: Cascade)\n\n  @@map(\"otp_codes\")\n}\n\nmodel UserAccount {\n  id                      String              @id @default(cuid())\n  userId                  String\n  accountType             AccountType\n  accountNumber           String              @unique\n  productCode             String?\n  productName             String?\n  interestRate            Decimal?            @db.Decimal(15, 2)\n  lockPeriodMonths        Int?\n  lockedUntil             DateTime?\n  allowAdditionalDeposits Boolean             @default(true)\n  metadata                Json?\n  balance                 Decimal             @default(0.00) @db.Decimal(15, 2)\n  status                  AccountStatus       @default(ACTIVE)\n  createdAt               DateTime            @default(now())\n  transactionIntents      TransactionIntent[]\n  user                    User                @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"user_accounts\")\n}\n\nmodel TransactionIntent {\n  id                    String               @id @default(cuid())\n  userId                String\n  accountId             String\n  accountType           AccountType\n  intentType            IntentType\n  amount                Decimal              @db.Decimal(15, 2)\n  paymentMethod         String\n  investmentTranche     String?\n  investmentTerm        Int?\n  userNotes             String?\n  adminNotes            String?\n  status                TransactionStatus    @default(PENDING)\n  referenceNumber       String               @unique\n  providerTransactionId String?              @unique\n  providerStatus        String?\n  lastCallbackAt        DateTime?\n  lastCallbackPayload   Json?\n  createdAt             DateTime             @default(now())\n  updatedAt             DateTime             @updatedAt\n  account               UserAccount          @relation(fields: [accountId], references: [id], onDelete: Cascade)\n  user                  User                 @relation(fields: [userId], references: [id], onDelete: Cascade)\n  paymentCallbacks      PaymentCallbackLog[]\n\n  @@map(\"transaction_intents\")\n}\n\nmodel PaymentCallbackLog {\n  id                  String            @id @default(cuid())\n  transactionIntentId String\n  status              String\n  payload             Json\n  createdAt           DateTime          @default(now())\n  transactionIntent   TransactionIntent @relation(fields: [transactionIntentId], references: [id], onDelete: Cascade)\n\n  @@map(\"payment_callback_logs\")\n}\n\nmodel KycDocument {\n  id                 String             @id @default(cuid())\n  userId             String\n  documentType       String\n  fileUrl            String\n  fileName           String\n  uploadDate         DateTime           @default(now())\n  verificationStatus VerificationStatus @default(PENDING)\n  adminNotes         String?\n  user               User               @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"kyc_documents\")\n}\n\nmodel AdminUser {\n  id             String    @id @default(cuid())\n  email          String    @unique\n  passwordHash   String\n  name           String\n  role           AdminRole @default(ADMIN)\n  lastLogin      DateTime?\n  createdAt      DateTime  @default(now())\n  failedAttempts Int       @default(0)\n  isActive       Boolean   @default(true)\n  lockedUntil    DateTime?\n  updatedAt      DateTime  @updatedAt\n\n  @@map(\"admin_users\")\n}\n\nmodel RegistrationSession {\n  id        String      @id @default(cuid())\n  email     String\n  phone     String\n  data      String\n  type      SessionType @default(REGISTRATION)\n  expiresAt DateTime\n  createdAt DateTime    @default(now())\n  otpCodes  OtpCode[]\n\n  @@map(\"registration_sessions\")\n}\n\nmodel Notification {\n  id        String               @id @default(cuid())\n  userId    String\n  title     String\n  message   String\n  type      NotificationType\n  priority  NotificationPriority\n  isRead    Boolean              @default(false)\n  metadata  String?              @db.Text\n  createdAt DateTime             @default(now())\n  updatedAt DateTime             @updatedAt\n  user      User                 @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"notifications\")\n}\n\nenum KycStatus {\n  PENDING\n  APPROVED\n  REJECTED\n  UNDER_REVIEW\n}\n\nenum OtpType {\n  EMAIL\n  SMS\n}\n\nenum AccountType {\n  SAMA_NAFFA\n  APE_INVESTMENT\n}\n\nenum AccountStatus {\n  ACTIVE\n  INACTIVE\n  SUSPENDED\n}\n\nenum IntentType {\n  DEPOSIT\n  INVESTMENT\n  WITHDRAWAL\n}\n\nenum TransactionStatus {\n  PENDING\n  PROCESSING\n  COMPLETED\n  CANCELLED\n  FAILED\n}\n\nenum VerificationStatus {\n  PENDING\n  APPROVED\n  REJECTED\n  UNDER_REVIEW\n}\n\nenum AdminRole {\n  ADMIN\n  MANAGER\n  SUPPORT\n}\n\nenum SessionType {\n  REGISTRATION\n  LOGIN\n}\n\nenum NotificationType {\n  KYC_STATUS\n  SUCCESS\n  ERROR\n  WARNING\n  TRANSACTION\n  SECURITY\n}\n\nenum NotificationPriority {\n  LOW\n  NORMAL\n  HIGH\n  URGENT\n}\n",
  "inlineSchemaHash": "716047940bdf51db787b433eb89783ad7c6359509c98fa24ed3522054c626851",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateOfBirth\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nationality\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"preferredLanguage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"phoneVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"otpVerifiedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"kycStatus\",\"kind\":\"enum\",\"type\":\"KycStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"civilite\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"region\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"department\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"arrondissement\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"district\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"domaineActivite\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idExpiryDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"idIssueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"idNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"marketingAccepted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"metiers\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"placeOfBirth\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"privacyAccepted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"signature\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"statutEmploi\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"termsAccepted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"kycDocuments\",\"kind\":\"object\",\"type\":\"KycDocument\",\"relationName\":\"KycDocumentToUser\"},{\"name\":\"otpCodes\",\"kind\":\"object\",\"type\":\"OtpCode\",\"relationName\":\"OtpCodeToUser\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"transactionIntents\",\"kind\":\"object\",\"type\":\"TransactionIntent\",\"relationName\":\"TransactionIntentToUser\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"UserAccount\",\"relationName\":\"UserToUserAccount\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToUser\"}],\"dbName\":\"users\"},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":\"sessions\"},\"OtpCode\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"registrationSessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"OtpType\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"used\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OtpCodeToUser\"},{\"name\":\"registrationSession\",\"kind\":\"object\",\"type\":\"RegistrationSession\",\"relationName\":\"OtpCodeToRegistrationSession\"}],\"dbName\":\"otp_codes\"},\"UserAccount\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountType\",\"kind\":\"enum\",\"type\":\"AccountType\"},{\"name\":\"accountNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"interestRate\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"lockPeriodMonths\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lockedUntil\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"allowAdditionalDeposits\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"balance\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AccountStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"transactionIntents\",\"kind\":\"object\",\"type\":\"TransactionIntent\",\"relationName\":\"TransactionIntentToUserAccount\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserAccount\"}],\"dbName\":\"user_accounts\"},\"TransactionIntent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountType\",\"kind\":\"enum\",\"type\":\"AccountType\"},{\"name\":\"intentType\",\"kind\":\"enum\",\"type\":\"IntentType\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"paymentMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"investmentTranche\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"investmentTerm\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adminNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TransactionStatus\"},{\"name\":\"referenceNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerTransactionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastCallbackAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastCallbackPayload\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"account\",\"kind\":\"object\",\"type\":\"UserAccount\",\"relationName\":\"TransactionIntentToUserAccount\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TransactionIntentToUser\"},{\"name\":\"paymentCallbacks\",\"kind\":\"object\",\"type\":\"PaymentCallbackLog\",\"relationName\":\"PaymentCallbackLogToTransactionIntent\"}],\"dbName\":\"transaction_intents\"},\"PaymentCallbackLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transactionIntentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payload\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"transactionIntent\",\"kind\":\"object\",\"type\":\"TransactionIntent\",\"relationName\":\"PaymentCallbackLogToTransactionIntent\"}],\"dbName\":\"payment_callback_logs\"},\"KycDocument\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uploadDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"verificationStatus\",\"kind\":\"enum\",\"type\":\"VerificationStatus\"},{\"name\":\"adminNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"KycDocumentToUser\"}],\"dbName\":\"kyc_documents\"},\"AdminUser\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"AdminRole\"},{\"name\":\"lastLogin\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"failedAttempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lockedUntil\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"admin_users\"},\"RegistrationSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"SessionType\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"otpCodes\",\"kind\":\"object\",\"type\":\"OtpCode\",\"relationName\":\"OtpCodeToRegistrationSession\"}],\"dbName\":\"registration_sessions\"},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"NotificationType\"},{\"name\":\"priority\",\"kind\":\"enum\",\"type\":\"NotificationPriority\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationToUser\"}],\"dbName\":\"notifications\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

